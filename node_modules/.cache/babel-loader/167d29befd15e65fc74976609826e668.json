{"ast":null,"code":"import actionTypes from '../actions/actionTypes';\nconst initialState = {\n  isLoadingGender: false,\n  genders: [],\n  roles: [],\n  positions: []\n};\n\nconst adminReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_GENDER_START:\n      let copyState = { ...sta\n      };\n      state.isLoadingGender = true;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_GENDER_SUCCESS:\n      state.genders = action.data;\n      state.isLoadingGender = false;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_GENDER_FAILED:\n      state.isLoadingGender = false;\n      state.genders = [];\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default adminReducer;","map":{"version":3,"sources":["D:/NienLuan/project/REACTJS/src/store/reducers/adminReducer.js"],"names":["actionTypes","initialState","isLoadingGender","genders","roles","positions","adminReducer","state","action","type","FETCH_GENDER_START","copyState","sta","FETCH_GENDER_SUCCESS","data","FETCH_GENDER_FAILED"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,SAAS,EAAE;AAJM,CAArB;;AAOA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,WAAW,CAACU,kBAAjB;AACI,UAAIC,SAAS,GAAG,EAAC,GAAGC;AAAJ,OAAhB;AACAL,MAAAA,KAAK,CAACL,eAAN,GAAwB,IAAxB;AACA,aAAO,EACH,GAAGK;AADA,OAAP;;AAGJ,SAAKP,WAAW,CAACa,oBAAjB;AAEIN,MAAAA,KAAK,CAACJ,OAAN,GAAgBK,MAAM,CAACM,IAAvB;AACAP,MAAAA,KAAK,CAACL,eAAN,GAAwB,KAAxB;AAEA,aAAO,EACH,GAAGK;AADA,OAAP;;AAGJ,SAAKP,WAAW,CAACe,mBAAjB;AACIR,MAAAA,KAAK,CAACL,eAAN,GAAwB,KAAxB;AACAK,MAAAA,KAAK,CAACJ,OAAN,GAAgB,EAAhB;AAEA,aAAO,EACH,GAAGI;AADA,OAAP;;AAGJ;AACI,aAAOA,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeD,YAAf","sourcesContent":["import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoadingGender: false,\r\n    genders: [],\r\n    roles: [],\r\n    positions: []\r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_GENDER_START:\r\n            let copyState = {...sta}\r\n            state.isLoadingGender = true\r\n            return { \r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_GENDER_SUCCESS:\r\n           \r\n            state.genders = action.data;\r\n            state.isLoadingGender = false\r\n\r\n            return { \r\n                ...state,\r\n            }    \r\n        case actionTypes.FETCH_GENDER_FAILED:\r\n            state.isLoadingGender = false\r\n            state.genders = [];\r\n\r\n            return { \r\n                ...state,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default adminReducer;"]},"metadata":{},"sourceType":"module"}