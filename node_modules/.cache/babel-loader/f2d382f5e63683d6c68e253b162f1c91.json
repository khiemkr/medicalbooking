{"ast":null,"code":"var _jsxFileName = \"D:\\\\NienLuan\\\\project\\\\REACTJS\\\\src\\\\containers\\\\System\\\\Admin\\\\ManagaDoctor.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './TableManageUser.scss';\nimport * as actions from '../../../store/actions';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\nimport './ManageDoctor.scss';\nimport Select from 'react-select';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: 'chocolate',\n  label: 'chocolate'\n}, {\n  value: 'chocolate1',\n  label: 'chocolate1'\n}, {\n  value: 'chocolate2',\n  label: 'chocolate2'\n}];\nconst mdParser = new MarkdownIt();\n\nclass ManageDoctor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSaveContentMarkdown = () => {\n      alert('click me');\n    };\n\n    this.handleChange = selectedDoctor => {\n      this.setState({\n        selectedDoctor\n      });\n    };\n\n    this.handleOnChangeDesc = () => {\n      this.setState({\n        description: ejs.target.value\n      });\n    };\n\n    this.state = {\n      contentMarkdown: '',\n      contentHTML: '',\n      selectedDoctor: '',\n      description: ''\n    };\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps, prevState, snapshot) {}\n\n  handleEditorChange({\n    html,\n    text\n  }) {\n    this.setState({\n      contentMarkdown: text,\n      contentHTML: html\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-doctor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-title\",\n        children: \"tao them thong tin doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-left form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Chon bac si\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedDoctor,\n            onChange: this.handleChange,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-right form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Thong tin gioi thieu:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            rows: \"4\",\n            onChange: () => this.handleOnChangeDesc,\n            value: this.setState.description,\n            children: \"fdfsdfs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-editor\",\n        children: /*#__PURE__*/_jsxDEV(MdEditor, {\n          style: {\n            height: '500px'\n          },\n          renderHTML: text => mdParser.render(text),\n          onChange: this.handleEditorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleSaveContentMarkdown(),\n        className: \"save-content-doctor\",\n        children: \"Luu thong tin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    listusers: state.admin.users\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetUserRedux: () => dispatch(actions.fetchAllUserStart()),\n    deleteUserRedux: id => dispatch(actions.deleteUser(id))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);","map":{"version":3,"sources":["D:/NienLuan/project/REACTJS/src/containers/System/Admin/ManagaDoctor.js"],"names":["React","Component","connect","actions","MarkdownIt","MdEditor","Select","options","value","label","mdParser","ManageDoctor","constructor","props","handleSaveContentMarkdown","alert","handleChange","selectedDoctor","setState","handleOnChangeDesc","description","ejs","target","state","contentMarkdown","contentHTML","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","handleEditorChange","html","text","render","height","mapStateToProps","listusers","admin","users","mapDispatchToProps","dispatch","fetUserRedux","fetchAllUserStart","deleteUserRedux","id","deleteUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './TableManageUser.scss'\r\nimport * as actions from '../../../store/actions'\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport 'react-markdown-editor-lite/lib/index.css'\r\nimport './ManageDoctor.scss'\r\nimport Select from 'react-select'\r\n\r\nconst options =[\r\n    {value: 'chocolate', label:'chocolate'},\r\n    {value: 'chocolate1', label:'chocolate1'},\r\n    {value: 'chocolate2', label:'chocolate2'}\r\n\r\n\r\n]\r\nconst mdParser = new MarkdownIt();\r\nclass ManageDoctor extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            contentMarkdown: '',\r\n            contentHTML:'',\r\n            selectedDoctor:'',\r\n            description:''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    }\r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n      \r\n    }\r\n    handleEditorChange({html,text}){\r\n        this.setState({\r\n            contentMarkdown:text,\r\n            contentHTML:html\r\n        })\r\n    }\r\n\r\n    handleSaveContentMarkdown = () =>{\r\n        alert('click me')\r\n    }\r\n    handleChange = selectedDoctor =>{\r\n        this.setState({\r\n            selectedDoctor\r\n        })\r\n    }\r\n    handleOnChangeDesc = () =>{\r\n        this.setState({\r\n            description: ejs.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='manage-doctor-container'>\r\n                <div className='manage-doctor-title'>\r\n                    tao them thong tin doctor\r\n                </div>\r\n                <div className='more-info'>\r\n                    <div className='content-left form-group'>\r\n                        <label>Chon bac si</label>\r\n                        <Select\r\n                            value={this.state.selectedDoctor}\r\n                            onChange={this.handleChange}\r\n                            options={options}\r\n                        />\r\n                    </div>\r\n                    <div className='content-right form-group'>\r\n                        <label>Thong tin gioi thieu:</label>\r\n                        <textarea \r\n                            className='form-control' \r\n                            rows='4'\r\n                            onChange={() => this.handleOnChangeDesc}\r\n                            value = {this.setState.description}\r\n                        >\r\n                            fdfsdfs\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n                <div className='manage-doctor-editor'>\r\n                    <MdEditor \r\n                        style={{height:'500px'}} \r\n                        renderHTML={text =>mdParser.render(text)}\r\n                        onChange={this.handleEditorChange}\r\n                    />\r\n                </div>\r\n                <button \r\n                    onClick={()=> this.handleSaveContentMarkdown()}\r\n                    className='save-content-doctor'\r\n                >\r\n                    Luu thong tin\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        listusers: state.admin.users\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetUserRedux: () => dispatch(actions.fetchAllUserStart()),\r\n        deleteUserRedux: (id) => dispatch(actions.deleteUser(id)),\r\n\r\n     };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n"]},"metadata":{},"sourceType":"module"}