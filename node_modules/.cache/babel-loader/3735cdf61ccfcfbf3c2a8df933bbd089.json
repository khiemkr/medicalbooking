{"ast":null,"code":"var _jsxFileName = \"D:\\\\NienLuan\\\\project\\\\REACTJS\\\\src\\\\containers\\\\System\\\\Admin\\\\UserRedux.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as actions from '../../../store/actions';\nimport { CRUD_ACTIONS, CommonUtils } from '../../../utils';\nimport './UserRedux.scss';\nimport TableManageUser from './TableManageUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass UserRedux extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnchangeImage = async e => {\n      let data = e.target.files;\n      let file = data[0];\n\n      if (file) {\n        let base64 = await CommonUtils.getBase64(file);\n        let objectUrl = URL.createObjectURL(file);\n        this.setState({\n          previewImg: objectUrl,\n          avatar: base64\n        });\n      }\n    };\n\n    this.handleSaveUser = () => {\n      let isValid = this.checkValidateInput();\n      if (isValid === false) return;\n      let {\n        action\n      } = this.state;\n\n      if (action === CRUD_ACTIONS.CREATE) {\n        this.props.createNewUser({\n          email: this.state.email,\n          password: this.state.password,\n          name: this.state.name,\n          address: this.state.address,\n          phoneNumber: this.state.phoneNumber,\n          gender: this.state.gender,\n          // roleId: this.state.role,\n          // positionId: this.state.position,\n          avatar: this.state.avatar\n        });\n      } // if (action === CRUD_ACTIONS.EDIT) {\n      //     this.props.editUserRedux({\n      //         id: this.state.userEditId,\n      //         email: this.state.email,\n      //         password: this.state.password,\n      //         firstName: this.state.firstName,\n      //         lastName: this.state.lastName,\n      //         address: this.state.address,\n      //         phonenumber: this.state.phonenumber,\n      //         gender: this.state.gender,\n      //         roleId: this.state.role,\n      //         positionId: this.state.position,\n      //         avatar: this.state.avatar\n      //     })\n      // }\n\n\n      console.log('chekc create', CRUD_ACTIONS.CREATE);\n    };\n\n    this.checkValidateInput = () => {\n      let isValid = true;\n      let arrCheck = ['email', 'password', 'name', 'phoneNumber', 'address'];\n\n      for (let i = 0; i < arrCheck.length; i++) {\n        if (!this.state[arrCheck[i]]) {\n          isValid = false;\n          alert('nhap day du thong tin');\n          break;\n        }\n      }\n\n      return isValid;\n    };\n\n    this.onChangeInput = (e, id) => {\n      let copyState = { ...this.state\n      };\n      copyState[id] = e.target.value;\n      this.setState({ ...copyState\n      });\n    };\n\n    this.handleEditUserFromParent = user => {\n      let imageBase64 = '';\n\n      if (user.image) {\n        imageBase64 = new Buffer(user.image, 'base64').toString('binary');\n      }\n\n      this.setState({\n        password: 'hashcode',\n        email: user.email,\n        firstName: user.firstName,\n        lastName: user.lastName,\n        phonenumber: user.phonenumber,\n        address: user.address,\n        gender: user.gender,\n        position: user.positionId,\n        role: user.roleId,\n        avatar: '',\n        previewImg: imageBase64,\n        action: CRUD_ACTIONS.EDIT,\n        userEditId: user.id\n      });\n    };\n\n    this.state = {\n      previewImg: '',\n      isOpen: false,\n      password: '',\n      email: '',\n      name: '',\n      phoneNumber: '',\n      address: '',\n      gender: '',\n      position: '',\n      role: '',\n      avatar: '',\n      userEditId: '',\n      action: ''\n    };\n  }\n\n  async componentDidMount() {}\n\n  componentDidUpdate(preProps, preState, snapshot) {\n    if (preProps.listusers !== this.props.listusers) {\n      this.setState({\n        password: '',\n        email: '',\n        firstName: '',\n        lastName: '',\n        phonenumber: '',\n        address: '',\n        avatar: '',\n        action: CRUD_ACTIONS.CREATE,\n        previewImg: ''\n      });\n    }\n  }\n\n  render() {\n    let {\n      password,\n      email,\n      name,\n      phonenumber,\n      address,\n      gender\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-redux-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"TH\\xCAM M\\u1EDAI NG\\u01AF\\u1EDCI D\\xD9NG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-redux-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"email\",\n                value: email,\n                onChange: e => {\n                  this.onChangeInput(e, 'email');\n                },\n                disabled: this.state.action === CRUD_ACTIONS.EDIT ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"password\",\n                value: password,\n                onChange: e => {\n                  this.onChangeInput(e, 'password');\n                },\n                disabled: this.state.action === CRUD_ACTIONS.EDIT ? true : false\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\",\n                value: name,\n                onChange: e => {\n                  this.onChangeInput(e, 'name');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\",\n                value: address,\n                onChange: e => {\n                  this.onChangeInput(e, 'address');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"PhoneNumber\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control\",\n                type: \"text\",\n                value: phonenumber,\n                onChange: e => {\n                  this.onChangeInput(e, 'phoneNumber');\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Gender\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"form-control\",\n                onChange: e => {\n                  this.onChangeInput(e, 'gender');\n                },\n                value: gender,\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"NAM\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: \"NU\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preview-img-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"previewImg\",\n                  type: \"file\",\n                  hidden: true,\n                  onChange: e => this.handleOnchangeImage(e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"label-upload\",\n                  htmlFor: \"previewImg\",\n                  children: [\" T\\u1EA3i \\u1EA2nh \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 99\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"preview-image\",\n                  style: {\n                    backgroundImage: `url(${this.state.previewImg})`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 mt-3\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: this.state.action === CRUD_ACTIONS.EDIT ? 'btn btn-warning' : 'btn btn-primary',\n                onClick: () => this.handleSaveUser(),\n                children: this.state.action === CRUD_ACTIONS.EDIT ? 'Save Change' : 'Save'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12 mb-5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    genderRedux: state.admin.genders,\n    positionRedux: state.admin.positions,\n    roleRedux: state.admin.roles,\n    listusers: state.admin.users,\n    isLoadingGender: state.admin.isLoadingGender\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    // getGenderStart: () => { dispatch(actions.fetchGenderStart()) },\n    // getPositionStart: () => { dispatch(actions.fetchPositionStart()) },\n    // getRoleStart: () => { dispatch(actions.fetchRoleStart()) },\n    createNewUser: data => dispatch(actions.createNewUser(data)),\n    fetUserRedux: () => dispatch(actions.fetchAllUserStart()),\n    editUserRedux: data => dispatch(actions.editUser(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);","map":{"version":3,"sources":["D:/NienLuan/project/REACTJS/src/containers/System/Admin/UserRedux.js"],"names":["React","Component","connect","actions","CRUD_ACTIONS","CommonUtils","TableManageUser","UserRedux","constructor","props","handleOnchangeImage","e","data","target","files","file","base64","getBase64","objectUrl","URL","createObjectURL","setState","previewImg","avatar","handleSaveUser","isValid","checkValidateInput","action","state","CREATE","createNewUser","email","password","name","address","phoneNumber","gender","console","log","arrCheck","i","length","alert","onChangeInput","id","copyState","value","handleEditUserFromParent","user","imageBase64","image","Buffer","toString","firstName","lastName","phonenumber","position","positionId","role","roleId","EDIT","userEditId","isOpen","componentDidMount","componentDidUpdate","preProps","preState","snapshot","listusers","render","backgroundImage","mapStateToProps","genderRedux","admin","genders","positionRedux","positions","roleRedux","roles","users","isLoadingGender","mapDispatchToProps","dispatch","fetUserRedux","fetchAllUserStart","editUserRedux","editUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../../store/actions';\r\nimport { CRUD_ACTIONS, CommonUtils } from '../../../utils';\r\nimport './UserRedux.scss';\r\nimport TableManageUser from './TableManageUser';\r\nclass UserRedux extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            previewImg: '',\r\n            isOpen: false,\r\n            password: '',\r\n            email: '',\r\n            name: '',\r\n            phoneNumber: '',\r\n            address: '',\r\n            gender: '',\r\n            position: '',\r\n            role: '',\r\n            avatar: '',\r\n            userEditId: '',\r\n            action: ''\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n    }\r\n    componentDidUpdate(preProps, preState, snapshot) {\r\n        if (preProps.listusers !== this.props.listusers) {\r\n            this.setState({\r\n                password: '',\r\n                email: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                phonenumber: '',\r\n                address: '',\r\n                avatar: '',\r\n                action: CRUD_ACTIONS.CREATE,\r\n                previewImg: ''\r\n            })\r\n        }\r\n    }\r\n    handleOnchangeImage = async (e) => {\r\n        let data = e.target.files;\r\n        let file = data[0];\r\n        if (file) {\r\n            let base64 = await CommonUtils.getBase64(file);\r\n            let objectUrl = URL.createObjectURL(file)\r\n            this.setState({\r\n                previewImg: objectUrl,\r\n                avatar: base64\r\n            })\r\n        }\r\n    }\r\n    handleSaveUser = () => {\r\n        let isValid = this.checkValidateInput();\r\n        if (isValid === false) return;\r\n        let { action } = this.state;\r\n        if (action === CRUD_ACTIONS.CREATE) {\r\n            this.props.createNewUser({\r\n                email: this.state.email,\r\n                password: this.state.password,\r\n                name: this.state.name,\r\n                address: this.state.address,\r\n                phoneNumber: this.state.phoneNumber,\r\n                gender: this.state.gender,\r\n                // roleId: this.state.role,\r\n                // positionId: this.state.position,\r\n                avatar: this.state.avatar\r\n            })\r\n            \r\n        }\r\n        // if (action === CRUD_ACTIONS.EDIT) {\r\n        //     this.props.editUserRedux({\r\n        //         id: this.state.userEditId,\r\n        //         email: this.state.email,\r\n        //         password: this.state.password,\r\n        //         firstName: this.state.firstName,\r\n        //         lastName: this.state.lastName,\r\n        //         address: this.state.address,\r\n        //         phonenumber: this.state.phonenumber,\r\n        //         gender: this.state.gender,\r\n        //         roleId: this.state.role,\r\n        //         positionId: this.state.position,\r\n        //         avatar: this.state.avatar\r\n        //     })\r\n        // }\r\n        console.log('chekc create',CRUD_ACTIONS.CREATE)\r\n\r\n    }\r\n\r\n    checkValidateInput = () => {\r\n        let isValid = true;\r\n        let arrCheck = ['email', 'password', 'name', 'phoneNumber', 'address']\r\n        for (let i = 0; i < arrCheck.length; i++) {\r\n            if (!this.state[arrCheck[i]]) {\r\n                isValid = false;\r\n                alert('nhap day du thong tin')\r\n                break\r\n            }\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    onChangeInput = (e, id) => {\r\n        let copyState = { ...this.state }\r\n        copyState[id] = e.target.value;\r\n        this.setState({\r\n            ...copyState\r\n        })\r\n    }\r\n    handleEditUserFromParent = (user) => {\r\n        let imageBase64 = '';\r\n        if (user.image) {\r\n            imageBase64 = new Buffer(user.image, 'base64').toString('binary');\r\n        }\r\n        this.setState({\r\n            password: 'hashcode',\r\n            email: user.email,\r\n            firstName: user.firstName,\r\n            lastName: user.lastName,\r\n            phonenumber: user.phonenumber,\r\n            address: user.address,\r\n            gender: user.gender,\r\n            position: user.positionId,\r\n            role: user.roleId,\r\n            avatar: '',\r\n            previewImg: imageBase64,\r\n            action: CRUD_ACTIONS.EDIT,\r\n            userEditId: user.id\r\n\r\n        })\r\n    }\r\n    render() {\r\n        let { password, email, name, phonenumber, address, gender } = this.state\r\n        return (\r\n            <div className='user-redux-container'>\r\n                <div className=\"title\" >\r\n                    THÊM MỚI NGƯỜI DÙNG\r\n                </div>\r\n                <div className='user-redux-body'>\r\n                    <div className='container'>\r\n                        <div className='row'>\r\n                            <div className='col-3'>\r\n                                <label>Email</label>\r\n                                <input className='form-control' type='email'\r\n                                    value={email}\r\n                                    onChange={(e) => { this.onChangeInput(e, 'email') }}\r\n                                    disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false}\r\n                                />\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <label>Password</label>\r\n                                <input className='form-control' type='password'\r\n                                    value={password}\r\n                                    onChange={(e) => { this.onChangeInput(e, 'password') }}\r\n                                    disabled={this.state.action === CRUD_ACTIONS.EDIT ? true : false}\r\n                                />\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <label>Name</label>\r\n                                <input className='form-control' type='text'\r\n                                    value={name}\r\n                                    onChange={(e) => { this.onChangeInput(e, 'name') }}\r\n                                />\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <label>Address</label>\r\n                                <input className='form-control' type='text'\r\n                                    value={address}\r\n                                    onChange={(e) => { this.onChangeInput(e, 'address') }}\r\n                                />\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <label>PhoneNumber</label>\r\n                                <input className='form-control' type='text'\r\n                                    value={phonenumber}\r\n                                    onChange={(e) => { this.onChangeInput(e, 'phoneNumber') }}\r\n                                />\r\n                            </div>\r\n                            <div className='col-3'>\r\n                                <label>Gender</label>\r\n                                <select className='form-control'\r\n                                    onChange={(e) => { this.onChangeInput(e, 'gender') }}\r\n                                    value={gender}\r\n                                >\r\n                                    <option>NAM</option>\r\n                                    <option>NU</option>\r\n                                </select>\r\n                            </div>\r\n                            {/* <div className='col-3'>\r\n                                <label>Vị Trí</label>\r\n                                <select className='form-control'\r\n                                    onChange={(e) => { this.onChangeInput(e, 'position') }}\r\n                                    value={position}\r\n\r\n                                >\r\n                                    {positions && positions.length > 0 &&\r\n                                        positions.map((item, index) => {\r\n                                            return (\r\n                                                <option\r\n                                                    key={index}\r\n                                                    value={item.keyMap}\r\n                                                >\r\n                                                    {item.valueVi}\r\n                                                </option>\r\n                                            )\r\n                                        })}\r\n                                </select>\r\n                            </div> */}\r\n                            {/* <div className='col-6'>\r\n                                <label>roleId</label>\r\n                                <select className='form-control'\r\n                                    onChange={(e) => { this.onChangeInput(e, 'role') }}\r\n                                    value={role}\r\n                                    \r\n                                >\r\n                                    {roles && roles.length > 0 &&\r\n                                        roles.map((item, index) => {\r\n                                            return (\r\n                                                <option\r\n                                                    key={index}\r\n                                                    value={item.keyMap}\r\n                                                >\r\n                                                    {item.valueVi}\r\n                                                </option>\r\n                                            )\r\n                                        })}\r\n                                </select>\r\n                            </div> */}\r\n                            <div className='col-6'>\r\n                                <label>Image</label>\r\n                                <div className='preview-img-container'>\r\n                                    <input id='previewImg' type='file' hidden\r\n                                        onChange={(e) => this.handleOnchangeImage(e)}\r\n                                    />\r\n                                    <label className='label-upload' htmlFor='previewImg'> Tải Ảnh <i className='fas fa-upload'></i></label>\r\n                                    <div className='preview-image' style={{ backgroundImage: `url(${this.state.previewImg})` }}>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='col-12 mt-3'>\r\n                                <button className={this.state.action === CRUD_ACTIONS.EDIT ? 'btn btn-warning' : 'btn btn-primary'}\r\n                                    onClick={() => this.handleSaveUser()}\r\n                                >\r\n                                    {this.state.action === CRUD_ACTIONS.EDIT ? 'Save Change' : 'Save'}\r\n                                </button>\r\n                            </div>\r\n                            <div className='col-12 mb-5'>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        genderRedux: state.admin.genders,\r\n        positionRedux: state.admin.positions,\r\n        roleRedux: state.admin.roles,\r\n        listusers: state.admin.users,\r\n        isLoadingGender: state.admin.isLoadingGender\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        // getGenderStart: () => { dispatch(actions.fetchGenderStart()) },\r\n        // getPositionStart: () => { dispatch(actions.fetchPositionStart()) },\r\n        // getRoleStart: () => { dispatch(actions.fetchRoleStart()) },\r\n        createNewUser: (data) => dispatch(actions.createNewUser(data)),\r\n        fetUserRedux: () => dispatch(actions.fetchAllUserStart()),\r\n        editUserRedux: (data) => dispatch(actions.editUser(data))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\r\n"]},"metadata":{},"sourceType":"module"}