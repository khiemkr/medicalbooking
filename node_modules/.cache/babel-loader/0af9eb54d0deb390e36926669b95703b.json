{"ast":null,"code":"import actionTypes from './actionTypes';\nimport { getAllCodeService, createNewUserService, getAllUsers } from '../../services/userService';\nexport const fetchGenderStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_GENDER_START\n      });\n      let res = await getAllCodeService(\"GENDER\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchGenderSuccess(res.data));\n      } else {\n        dispatch(fetchGenderFailed());\n      }\n    } catch (e) {\n      dispatch(fetchGenderFailed());\n      console.log(e);\n    }\n  };\n};\nexport const fetchGenderSuccess = genderData => ({\n  type: actionTypes.FETCH_GENDER_SUCCESS,\n  data: genderData\n});\nexport const fetchGenderFailed = () => ({\n  type: actionTypes.FETCH_GENDER_FAILED\n});\nexport const fetchPositionStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllCodeService(\"POSITION\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchPositionSuccess(res.data));\n      } else {\n        dispatch(fetchPositionFailed());\n      }\n    } catch (e) {\n      dispatch(fetchPositionFailed());\n      console.log(e);\n    }\n  };\n};\nexport const fetchPositionSuccess = positionData => ({\n  type: actionTypes.FETCH_POSITION_SUCCESS,\n  data: positionData\n});\nexport const fetchPositionFailed = () => ({\n  type: actionTypes.FETCH_POSITION_FAILED\n});\nexport const fetchRoleStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllCodeService(\"ROLE\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchRoleSuccess(res.data));\n      } else {\n        dispatch(fetchRoleFailed());\n      }\n    } catch (e) {\n      dispatch(fetchRoleFailed());\n      console.log(e);\n    }\n  };\n};\nexport const fetchRoleSuccess = roleData => ({\n  type: actionTypes.FETCH_ROLE_SUCCESS,\n  data: roleData\n});\nexport const fetchRoleFailed = () => ({\n  type: actionTypes.FETCH_ROLE_FAILED\n});\nexport const createNewUser = data => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await createNewUserService(data);\n      console.log('check', res);\n\n      if (res && res.errCode === 0) {\n        dispatch(saveUserSuccess());\n      } else {\n        dispatch(saveUserFailed());\n      }\n    } catch (e) {\n      dispatch(saveUserFailed());\n      console.log(e);\n    }\n  };\n};\nexport const saveUserSuccess = () => ({\n  type: actionTypes.CREATE_USER_SUCCESS\n});\nexport const saveUserFailed = () => ({\n  type: actionTypes.CREATE_USER_FAILD\n});\nexport const fetchAllUserStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllUsers(\"ALL\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchAllUserSuccess(res.data));\n      } else {\n        dispatch(fetchAllUserFailed());\n      }\n    } catch (e) {\n      dispatch(fetchAllUserFailed());\n      console.log(e);\n    }\n  };\n};\nexport const fetchAllUserSuccess = users => ({\n  type: 'FETCH_ALL_USER_FAILED',\n  users: da\n});\nfetchAllUserFailed;","map":{"version":3,"sources":["D:/NienLuan/project/REACTJS/src/store/actions/adminActions.js"],"names":["actionTypes","getAllCodeService","createNewUserService","getAllUsers","fetchGenderStart","dispatch","getState","type","FETCH_GENDER_START","res","errCode","fetchGenderSuccess","data","fetchGenderFailed","e","console","log","genderData","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAILED","fetchPositionStart","fetchPositionSuccess","fetchPositionFailed","positionData","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAILED","fetchRoleStart","fetchRoleSuccess","fetchRoleFailed","roleData","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAILED","createNewUser","saveUserSuccess","saveUserFailed","CREATE_USER_SUCCESS","CREATE_USER_FAILD","fetchAllUserStart","fetchAllUserSuccess","fetchAllUserFailed","users","da"],"mappings":"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","sourcesContent":["import actionTypes from './actionTypes';\r\nimport { getAllCodeService,createNewUserService,getAllUsers } from '../../services/userService';\r\nexport const fetchGenderStart = () => {\r\n    return async (dispatch,getState)=>{\r\n        try {\r\n            dispatch({type: actionTypes.FETCH_GENDER_START})\r\n            let res = await getAllCodeService(\"GENDER\");\r\n            if(res && res.errCode === 0){\r\n                dispatch(fetchGenderSuccess(res.data));\r\n\r\n            }else{\r\n                dispatch(fetchGenderFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchGenderFailed());\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: genderData\r\n})\r\nexport const fetchGenderFailed = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAILED\r\n})\r\n\r\n\r\n\r\nexport const fetchPositionStart = () => {\r\n    return async (dispatch,getState)=>{\r\n        try {\r\n            let res = await getAllCodeService(\"POSITION\");\r\n            if(res && res.errCode === 0){\r\n                dispatch(fetchPositionSuccess(res.data));\r\n\r\n            }else{\r\n                dispatch(fetchPositionFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchPositionFailed());\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\nexport const fetchPositionSuccess = (positionData) => ({\r\n    type: actionTypes.FETCH_POSITION_SUCCESS,\r\n    data: positionData\r\n})\r\nexport const fetchPositionFailed = () => ({\r\n    type: actionTypes.FETCH_POSITION_FAILED\r\n})\r\n\r\n\r\n\r\nexport const fetchRoleStart = () => {\r\n    return async (dispatch,getState)=>{\r\n        try {\r\n            let res = await getAllCodeService(\"ROLE\");\r\n            if(res && res.errCode === 0){\r\n                dispatch(fetchRoleSuccess(res.data));\r\n\r\n            }else{\r\n                dispatch(fetchRoleFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchRoleFailed());\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\nexport const fetchRoleSuccess = (roleData) => ({\r\n    type: actionTypes.FETCH_ROLE_SUCCESS,\r\n    data: roleData\r\n})\r\nexport const fetchRoleFailed = () => ({\r\n    type: actionTypes.FETCH_ROLE_FAILED\r\n})\r\n\r\n\r\nexport const createNewUser = (data) => {\r\n    return async (dispatch,getState)=>{\r\n        try {\r\n            let res = await createNewUserService(data);\r\n            console.log('check',res)\r\n            if(res && res.errCode === 0){\r\n                dispatch(saveUserSuccess());\r\n            }else{\r\n                dispatch(saveUserFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(saveUserFailed());\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\n\r\nexport const saveUserSuccess = () => ({\r\n    type: actionTypes.CREATE_USER_SUCCESS,\r\n})\r\n\r\nexport const saveUserFailed = () => ({\r\n    type: actionTypes.CREATE_USER_FAILD,\r\n})\r\n\r\n\r\nexport const fetchAllUserStart = () => {\r\n    return async (dispatch,getState)=>{\r\n        try {\r\n            let res = await getAllUsers(\"ALL\");\r\n            if(res && res.errCode === 0){\r\n                dispatch(fetchAllUserSuccess(res.data));\r\n\r\n            }else{\r\n                dispatch(fetchAllUserFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchAllUserFailed());\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\nexport const fetchAllUserSuccess = (users) =>({\r\n    type: 'FETCH_ALL_USER_FAILED',\r\n    users: da\r\n})\r\nfetchAllUserFailed"]},"metadata":{},"sourceType":"module"}