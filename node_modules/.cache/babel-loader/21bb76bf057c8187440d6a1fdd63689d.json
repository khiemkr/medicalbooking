{"ast":null,"code":"var _jsxFileName = \"D:\\\\NienLuan\\\\project\\\\REACTJS\\\\src\\\\containers\\\\System\\\\Admin\\\\ManagaDoctor.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './TableManageUser.scss';\nimport * as actions from '../../../store/actions';\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\nimport './ManageDoctor.scss';\nimport Select from 'react-select';\nimport { getDetailInfoDoctor } from '../../../services/userService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mdParser = new MarkdownIt();\n\nclass ManageDoctor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buildDataInputSelect = inputData => {\n      let result = [];\n\n      if (inputData && inputData.length > 0) {\n        inputData.map((item, index) => {\n          let object = {};\n          object.label = `${item.lastName} ${item.firstName}`;\n          object.value = item.id;\n          result.push(object);\n        });\n      }\n\n      return result;\n    };\n\n    this.handleEditorChange = ({\n      html,\n      text\n    }) => {\n      this.setState({\n        contentMarkdown: text,\n        contentHTML: html\n      });\n    };\n\n    this.handleSaveContentMarkdown = () => {\n      this.props.saveDetailDoctorRedux({\n        contentHTML: this.state.contentHTML,\n        contentMarkdown: this.state.contentMarkdown,\n        description: this.state.description,\n        doctorId: this.state.selectedDoctor.value\n      });\n      console.log(this.state);\n    };\n\n    this.handleChange = async selectedDoctor => {\n      this.setState({\n        selectedDoctor\n      });\n      let res = await getDetailInfoDoctor(selectedDoctor.value);\n    };\n\n    this.handleOnChangeDesc = e => {\n      this.setState({\n        description: e.target.value\n      });\n    };\n\n    this.state = {\n      contentMarkdown: '',\n      contentHTML: '',\n      selectedDoctor: '',\n      description: '',\n      listDoctors: ''\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetAllDoctorsRedux();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.allDoctors !== this.props.allDoctors) {\n      let dataSelect = this.buildDataInputSelect(this.props.allDoctors);\n      this.setState({\n        listDoctors: dataSelect\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"manage-doctor-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-title\",\n        children: \"tao them thong tin doctor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"more-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-left form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Chon bac si\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: this.state.selectedDoctor,\n            onChange: this.handleChange,\n            options: this.state.listDoctors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Thong tin gioi thieu:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            rows: \"4\",\n            onChange: e => this.handleOnChangeDesc(e),\n            value: this.setState.description,\n            children: \"fdfsdfs\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"manage-doctor-editor\",\n        children: /*#__PURE__*/_jsxDEV(MdEditor, {\n          style: {\n            height: '500px'\n          },\n          renderHTML: text => mdParser.render(text),\n          onChange: this.handleEditorChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleSaveContentMarkdown(),\n        className: \"save-content-doctor\",\n        children: \"Luu thong tin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allDoctors: state.admin.allDoctors\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetAllDoctorsRedux: () => dispatch(actions.fetchAllDoctor()),\n    saveDetailDoctorRedux: data => dispatch(actions.saveDetailInfoDoctor(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);","map":{"version":3,"sources":["D:/NienLuan/project/REACTJS/src/containers/System/Admin/ManagaDoctor.js"],"names":["React","Component","connect","actions","MarkdownIt","MdEditor","Select","getDetailInfoDoctor","mdParser","ManageDoctor","constructor","props","buildDataInputSelect","inputData","result","length","map","item","index","object","label","lastName","firstName","value","id","push","handleEditorChange","html","text","setState","contentMarkdown","contentHTML","handleSaveContentMarkdown","saveDetailDoctorRedux","state","description","doctorId","selectedDoctor","console","log","handleChange","res","handleOnChangeDesc","e","target","listDoctors","componentDidMount","fetAllDoctorsRedux","componentDidUpdate","prevProps","prevState","snapshot","allDoctors","dataSelect","render","height","mapStateToProps","admin","mapDispatchToProps","dispatch","fetchAllDoctor","data","saveDetailInfoDoctor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './TableManageUser.scss'\r\nimport * as actions from '../../../store/actions'\r\nimport MarkdownIt from 'markdown-it';\r\nimport MdEditor from 'react-markdown-editor-lite'\r\nimport 'react-markdown-editor-lite/lib/index.css'\r\nimport './ManageDoctor.scss'\r\nimport Select from 'react-select'\r\nimport {getDetailInfoDoctor} from '../../../services/userService'\r\nconst mdParser = new MarkdownIt();\r\nclass ManageDoctor extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            contentMarkdown: '',\r\n            contentHTML:'',\r\n            selectedDoctor:'',\r\n            description:'',\r\n            listDoctors:''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        this.props.fetAllDoctorsRedux();\r\n    }\r\n    buildDataInputSelect = (inputData) =>{\r\n        let result = [];\r\n        if(inputData && inputData.length > 0 ) {\r\n            inputData.map((item,index) =>{\r\n                let object ={};\r\n                object.label = `${item.lastName} ${item.firstName}`;\r\n                object.value = item.id;\r\n                result.push(object)\r\n            })\r\n        }\r\n        return result\r\n    }\r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n      if(prevProps.allDoctors !== this.props.allDoctors){\r\n        let dataSelect = this.buildDataInputSelect(this.props.allDoctors)  \r\n        this.setState({\r\n              listDoctors: dataSelect\r\n          })\r\n      }\r\n    } \r\n    handleEditorChange = ({html,text}) => {\r\n        this.setState({\r\n            contentMarkdown:text,\r\n            contentHTML:html\r\n        })\r\n    }\r\n\r\n    handleSaveContentMarkdown = () =>{\r\n        this.props.saveDetailDoctorRedux({\r\n            contentHTML: this.state.contentHTML,\r\n            contentMarkdown: this.state.contentMarkdown,\r\n            description: this.state.description,\r\n            doctorId: this.state.selectedDoctor.value,\r\n        })\r\n        console.log(this.state)\r\n    }\r\n    handleChange = async (selectedDoctor) =>{\r\n        this.setState({\r\n            selectedDoctor\r\n        })\r\n        let res = await getDetailInfoDoctor(selectedDoctor.value);\r\n    }\r\n    handleOnChangeDesc = (e) =>{\r\n        this.setState({\r\n            description: e.target.value\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div className='manage-doctor-container'>\r\n                <div className='manage-doctor-title'>\r\n                    tao them thong tin doctor\r\n                </div>\r\n                <div className='more-info'>\r\n                    <div className='content-left form-group'>\r\n                        <label>Chon bac si</label>\r\n                        <Select\r\n                            value={this.state.selectedDoctor}\r\n                            onChange={this.handleChange}\r\n                            options={this.state.listDoctors}\r\n                        />\r\n                    </div>\r\n                    <div className='content-right'>\r\n                        <label>Thong tin gioi thieu:</label>\r\n                        <textarea \r\n                            className='form-control' \r\n                            rows='4'\r\n                            onChange={(e) => this.handleOnChangeDesc(e)}\r\n                            value = {this.setState.description}\r\n                        >\r\n                            fdfsdfs\r\n                        </textarea>\r\n                    </div>\r\n                </div>\r\n                <div className='manage-doctor-editor'>\r\n                    <MdEditor \r\n                        style={{height:'500px'}} \r\n                        renderHTML={text =>mdParser.render(text)}\r\n                        onChange={this.handleEditorChange}\r\n                    />\r\n                </div>\r\n                <button \r\n                    onClick={()=> this.handleSaveContentMarkdown()}\r\n                    className='save-content-doctor'\r\n                >\r\n                    Luu thong tin\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        allDoctors: state.admin.allDoctors\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        fetAllDoctorsRedux: () => dispatch(actions.fetchAllDoctor()),\r\n        saveDetailDoctorRedux: (data) => dispatch(actions.saveDetailInfoDoctor(data))\r\n     };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\r\n"]},"metadata":{},"sourceType":"module"}