{"ast":null,"code":"var _jsxFileName = \"D:\\\\NienLuan\\\\project\\\\REACTJS\\\\src\\\\containers\\\\HomePage\\\\Section\\\\OutStandingDoctor.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Slider from 'react-slick';\nimport * as actions from '../../../store/actions';\nimport { withRouter } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass OutStandingDoctor extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleViewDetailDoctor = doctor => {\n      this.props.history.push(``);\n    };\n\n    this.state = {\n      arrDoctors: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.loadTopDotors();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.topDoctorsRedux !== this.props.topDoctorsRedux) {\n      this.setState({\n        arrDoctors: this.props.topDoctorsRedux\n      });\n    }\n  }\n\n  render() {\n    let allDoctors = this.state.arrDoctors;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-share section-outstanding-doctor\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"title-section\",\n            children: \"B\\xE1c s\\u0129 n\\u1ED5i b\\u1EADc\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-section\",\n            children: \"Xem th\\xEAm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-body\",\n          children: /*#__PURE__*/_jsxDEV(Slider, { ...this.props.settings,\n            children: allDoctors && allDoctors.length > 0 && allDoctors.map((item, index) => {\n              let imageBase64 = '';\n\n              if (item.image) {\n                imageBase64 = new Buffer(item.image, 'base64').toString('binary');\n              }\n\n              let nameVi = `${item.positionData.valueVi}, ${item.firstName} ${item.lastName}`;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"section-customize\",\n                onClick: () => this.handleViewDetailDoctor(item),\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"customize-border\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"outer-bg\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"bg-image section-outstanding-doctor\",\n                      style: {\n                        backgroundImage: `url(${imageBase64})`\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 54,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"position text-center\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      children: nameVi\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 60,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: \"Tieu hoa\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 61,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 53,\n                  columnNumber: 41\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 37\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggedIn: state.user.isLoggedIn,\n    topDoctorsRedux: state.admin.topDoctors\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    loadTopDotors: () => dispatch(actions.fetchTopDoctor())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor));","map":{"version":3,"sources":["D:/NienLuan/project/REACTJS/src/containers/HomePage/Section/OutStandingDoctor.js"],"names":["React","Component","Redirect","connect","Slider","actions","withRouter","OutStandingDoctor","constructor","props","handleViewDetailDoctor","doctor","history","push","state","arrDoctors","componentDidMount","loadTopDotors","componentDidUpdate","prevProps","prevState","snapshot","topDoctorsRedux","setState","render","allDoctors","settings","length","map","item","index","imageBase64","image","Buffer","toString","nameVi","positionData","valueVi","firstName","lastName","backgroundImage","mapStateToProps","isLoggedIn","user","admin","topDoctors","mapDispatchToProps","dispatch","fetchTopDoctor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport Slider from 'react-slick';\r\nimport * as actions from '../../../store/actions';\r\nimport { withRouter } from 'react-router';\r\nclass OutStandingDoctor extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            arrDoctors: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.loadTopDotors();\r\n\r\n    }\r\n    componentDidUpdate(prevProps,prevState,snapshot){\r\n        if(prevProps.topDoctorsRedux !== this.props.topDoctorsRedux){\r\n            this.setState({\r\n                arrDoctors: this.props.topDoctorsRedux\r\n            })\r\n        }\r\n    }\r\n    handleViewDetailDoctor = (doctor) =>{\r\n        this.props.history.push(``)\r\n    }\r\n    render() {\r\n        let allDoctors = this.state.arrDoctors;\r\n        return (\r\n            <div  className='section-share section-outstanding-doctor'>\r\n               <div className='section-container'>\r\n                   <div className='section-header'>\r\n                       <span className='title-section'>Bác sĩ nổi bậc</span>\r\n                       <button className='btn-section'>Xem thêm</button>\r\n                   </div>\r\n                   <div className='section-body'>\r\n                        <Slider {...this.props.settings} >\r\n                            {allDoctors && allDoctors.length > 0 \r\n                            && allDoctors.map((item,index) =>{\r\n                                let imageBase64 = '';\r\n\r\n                                if(item.image){\r\n                                    imageBase64 = new Buffer(item.image,'base64').toString('binary')\r\n                                }\r\n                                let nameVi=`${item.positionData.valueVi}, ${item.firstName} ${item.lastName}`;\r\n                                return(\r\n                                    <div \r\n                                        className='section-customize' key ={index}\r\n                                        onClick={() =>this.handleViewDetailDoctor(item)}\r\n                                    >\r\n                                        <div className='customize-border'>\r\n                                            <div className='outer-bg'>\r\n                                            <div className='bg-image section-outstanding-doctor'\r\n                                                style={{ backgroundImage: `url(${imageBase64})`}}\r\n                                            />\r\n                                            </div>\r\n                                            <div className='position text-center'>\r\n                                                <div>{nameVi}</div>\r\n                                                <div>Tieu hoa</div>\r\n                                            </div>             \r\n                                        </div>\r\n                                    </div >         \r\n                                )\r\n                            })}\r\n                        </Slider>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n        );\r\n    }\r\n\r\n} \r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isLoggedIn: state.user.isLoggedIn,\r\n        topDoctorsRedux: state.admin.topDoctors\r\n\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        loadTopDotors: () => dispatch(actions.fetchTopDoctor())\r\n    };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor));\r\n"]},"metadata":{},"sourceType":"module"}