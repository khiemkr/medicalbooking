{"ast":null,"code":"import actionTypes from '../actions/actionTypes';\nconst initialState = {\n  isLoadingGender: false,\n  genders: [],\n  roles: [],\n  positions: []\n};\n\nconst adminReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.FETCH_GENDER_START:\n      state.isLoadingGender = true;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_GENDER_SUCCESS:\n      copyState.genders = action.data;\n      copyState.isLoadingGender = false;\n      return { ...state\n      };\n\n    case actionTypes.FETCH_GENDER_FAILED:\n      let copyState = { ...state\n      };\n      copyState.isLoadingGender = false;\n      copyState.genders = [];\n      return { ...copyState\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default adminReducer;","map":{"version":3,"sources":["D:/NienLuan/project/REACTJS/src/store/reducers/adminReducer.js"],"names":["actionTypes","initialState","isLoadingGender","genders","roles","positions","adminReducer","state","action","type","FETCH_GENDER_START","FETCH_GENDER_SUCCESS","copyState","data","FETCH_GENDER_FAILED"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EAAE,KADA;AAEjBC,EAAAA,OAAO,EAAE,EAFQ;AAGjBC,EAAAA,KAAK,EAAE,EAHU;AAIjBC,EAAAA,SAAS,EAAE;AAJM,CAArB;;AAOA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,WAAW,CAACU,kBAAjB;AAEIH,MAAAA,KAAK,CAACL,eAAN,GAAwB,IAAxB;AACA,aAAO,EACH,GAAGK;AADA,OAAP;;AAGJ,SAAKP,WAAW,CAACW,oBAAjB;AAEIC,MAAAA,SAAS,CAACT,OAAV,GAAoBK,MAAM,CAACK,IAA3B;AACAD,MAAAA,SAAS,CAACV,eAAV,GAA4B,KAA5B;AAEA,aAAO,EACH,GAAGK;AADA,OAAP;;AAGJ,SAAKP,WAAW,CAACc,mBAAjB;AACI,UAAIF,SAAS,GAAG,EAAC,GAAGL;AAAJ,OAAhB;AACAK,MAAAA,SAAS,CAACV,eAAV,GAA4B,KAA5B;AACAU,MAAAA,SAAS,CAACT,OAAV,GAAoB,EAApB;AAEA,aAAO,EACH,GAAGS;AADA,OAAP;;AAGJ;AACI,aAAOL,KAAP;AAxBR;AA0BH,CA3BD;;AA6BA,eAAeD,YAAf","sourcesContent":["import actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    isLoadingGender: false,\r\n    genders: [],\r\n    roles: [],\r\n    positions: []\r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.FETCH_GENDER_START:\r\n            \r\n            state.isLoadingGender = true\r\n            return { \r\n                ...state,\r\n            }\r\n        case actionTypes.FETCH_GENDER_SUCCESS:\r\n           \r\n            copyState.genders = action.data;\r\n            copyState.isLoadingGender = false\r\n\r\n            return { \r\n                ...state,\r\n            }    \r\n        case actionTypes.FETCH_GENDER_FAILED:\r\n            let copyState = {...state};\r\n            copyState.isLoadingGender = false\r\n            copyState.genders = [];\r\n\r\n            return { \r\n                ...copyState,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default adminReducer;"]},"metadata":{},"sourceType":"module"}