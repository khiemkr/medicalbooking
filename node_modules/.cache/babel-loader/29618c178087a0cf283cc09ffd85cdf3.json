{"ast":null,"code":"import actionTypes from './actionTypes';\nimport { getAllCodeService } from '../../services/userService';\nexport const fetchGenderStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_GENDER_START\n      });\n      let res = await getAllCodeService(\"GENDER\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchGenderSuccess(res.data));\n      } else {\n        dispatch(fetchGenderFailed());\n      }\n    } catch (e) {\n      dispatch(fetchGenderFailed());\n      console.log(e);\n    }\n  };\n};\nexport const fetchGenderSuccess = genderData => ({\n  type: actionTypes.FETCH_GENDER_SUCCESS,\n  data: genderData\n});\nexport const fetchGenderFailed = () => ({\n  type: actionTypes.FETCH_GENDER_FAILED\n});\nexport const fetchPositionStart = () => {\n  return async (dispatch, getState) => {\n    try {\n      dispatch({\n        type: actionTypes.FETCH_POSITION_START\n      });\n      let res = await getAllCodeService(\"POSITIO\");\n\n      if (res && res.errCode === 0) {\n        dispatch(fetchGenderSuccess(res.data));\n      } else {\n        dispatch(fetchPositionFailed());\n      }\n    } catch (e) {\n      dispatch(fetchPositionFailed());\n      console.log(e);\n    }\n  };\n};\nexport const fetchPositionSuccess = positionData => ({\n  type: actionTypes.FETCH_POSITION_SUCCESS,\n  data: positionData\n});\nexport const fetchPositionFailed = () => ({\n  type: actionTypes.FETCH_POSITION_FAILED\n});\nexport const fetchRoleSuccess = roleData => ({\n  type: actionTypes.FETCH_ROLE_SUCCESS,\n  data: roleData\n});\nexport const fetchRoleFailed = () => ({\n  type: actionTypes.FETCH_ROLE_FAILED\n});","map":{"version":3,"sources":["D:/NienLuan/project/REACTJS/src/store/actions/adminActions.js"],"names":["actionTypes","getAllCodeService","fetchGenderStart","dispatch","getState","type","FETCH_GENDER_START","res","errCode","fetchGenderSuccess","data","fetchGenderFailed","e","console","log","genderData","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAILED","fetchPositionStart","FETCH_POSITION_START","fetchPositionFailed","fetchPositionSuccess","positionData","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAILED","fetchRoleSuccess","roleData","FETCH_ROLE_SUCCESS","fetchRoleFailed","FETCH_ROLE_FAILED"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,iBAAT,QAAkC,4BAAlC;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAM;AAClC,SAAO,OAAOC,QAAP,EAAgBC,QAAhB,KAA2B;AAC9B,QAAI;AACAD,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEL,WAAW,CAACM;AAAnB,OAAD,CAAR;AACA,UAAIC,GAAG,GAAG,MAAMN,iBAAiB,CAAC,QAAD,CAAjC;;AACA,UAAGM,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAA1B,EAA4B;AACxBL,QAAAA,QAAQ,CAACM,kBAAkB,CAACF,GAAG,CAACG,IAAL,CAAnB,CAAR;AAEH,OAHD,MAGK;AACDP,QAAAA,QAAQ,CAACQ,iBAAiB,EAAlB,CAAR;AACH;AACJ,KATD,CASE,OAAOC,CAAP,EAAU;AACRT,MAAAA,QAAQ,CAACQ,iBAAiB,EAAlB,CAAR;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GAdD;AAeH,CAhBM;AAiBP,OAAO,MAAMH,kBAAkB,GAAIM,UAAD,KAAiB;AAC/CV,EAAAA,IAAI,EAAEL,WAAW,CAACgB,oBAD6B;AAE/CN,EAAAA,IAAI,EAAEK;AAFyC,CAAjB,CAA3B;AAIP,OAAO,MAAMJ,iBAAiB,GAAG,OAAO;AACpCN,EAAAA,IAAI,EAAEL,WAAW,CAACiB;AADkB,CAAP,CAA1B;AAMP,OAAO,MAAMC,kBAAkB,GAAG,MAAM;AACpC,SAAO,OAAOf,QAAP,EAAgBC,QAAhB,KAA2B;AAC9B,QAAI;AACAD,MAAAA,QAAQ,CAAC;AAACE,QAAAA,IAAI,EAAEL,WAAW,CAACmB;AAAnB,OAAD,CAAR;AACA,UAAIZ,GAAG,GAAG,MAAMN,iBAAiB,CAAC,SAAD,CAAjC;;AACA,UAAGM,GAAG,IAAIA,GAAG,CAACC,OAAJ,KAAgB,CAA1B,EAA4B;AACxBL,QAAAA,QAAQ,CAACM,kBAAkB,CAACF,GAAG,CAACG,IAAL,CAAnB,CAAR;AAEH,OAHD,MAGK;AACDP,QAAAA,QAAQ,CAACiB,mBAAmB,EAApB,CAAR;AACH;AACJ,KATD,CASE,OAAOR,CAAP,EAAU;AACRT,MAAAA,QAAQ,CAACiB,mBAAmB,EAApB,CAAR;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GAdD;AAeH,CAhBM;AAiBP,OAAO,MAAMS,oBAAoB,GAAIC,YAAD,KAAmB;AACnDjB,EAAAA,IAAI,EAAEL,WAAW,CAACuB,sBADiC;AAEnDb,EAAAA,IAAI,EAAEY;AAF6C,CAAnB,CAA7B;AAIP,OAAO,MAAMF,mBAAmB,GAAG,OAAO;AACtCf,EAAAA,IAAI,EAAEL,WAAW,CAACwB;AADoB,CAAP,CAA5B;AAIP,OAAO,MAAMC,gBAAgB,GAAIC,QAAD,KAAe;AAC3CrB,EAAAA,IAAI,EAAEL,WAAW,CAAC2B,kBADyB;AAE3CjB,EAAAA,IAAI,EAAEgB;AAFqC,CAAf,CAAzB;AAIP,OAAO,MAAME,eAAe,GAAG,OAAO;AAClCvB,EAAAA,IAAI,EAAEL,WAAW,CAAC6B;AADgB,CAAP,CAAxB","sourcesContent":["import actionTypes from './actionTypes';\r\nimport { getAllCodeService } from '../../services/userService';\r\nexport const fetchGenderStart = () => {\r\n    return async (dispatch,getState)=>{\r\n        try {\r\n            dispatch({type: actionTypes.FETCH_GENDER_START})\r\n            let res = await getAllCodeService(\"GENDER\");\r\n            if(res && res.errCode === 0){\r\n                dispatch(fetchGenderSuccess(res.data));\r\n\r\n            }else{\r\n                dispatch(fetchGenderFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchGenderFailed());\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\nexport const fetchGenderSuccess = (genderData) => ({\r\n    type: actionTypes.FETCH_GENDER_SUCCESS,\r\n    data: genderData\r\n})\r\nexport const fetchGenderFailed = () => ({\r\n    type: actionTypes.FETCH_GENDER_FAILED\r\n})\r\n\r\n\r\n\r\nexport const fetchPositionStart = () => {\r\n    return async (dispatch,getState)=>{\r\n        try {\r\n            dispatch({type: actionTypes.FETCH_POSITION_START})\r\n            let res = await getAllCodeService(\"POSITIO\");\r\n            if(res && res.errCode === 0){\r\n                dispatch(fetchGenderSuccess(res.data));\r\n\r\n            }else{\r\n                dispatch(fetchPositionFailed());\r\n            }\r\n        } catch (e) {\r\n            dispatch(fetchPositionFailed());\r\n            console.log(e)\r\n        }\r\n    }\r\n}\r\nexport const fetchPositionSuccess = (positionData) => ({\r\n    type: actionTypes.FETCH_POSITION_SUCCESS,\r\n    data: positionData\r\n})\r\nexport const fetchPositionFailed = () => ({\r\n    type: actionTypes.FETCH_POSITION_FAILED\r\n})\r\n\r\nexport const fetchRoleSuccess = (roleData) => ({\r\n    type: actionTypes.FETCH_ROLE_SUCCESS,\r\n    data: roleData\r\n})\r\nexport const fetchRoleFailed = () => ({\r\n    type: actionTypes.FETCH_ROLE_FAILED\r\n})\r\n\r\n"]},"metadata":{},"sourceType":"module"}